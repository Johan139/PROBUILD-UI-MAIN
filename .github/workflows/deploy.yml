name: Build and Deploy to Azure Container App

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Check out code
        uses: actions/checkout@v4

      # Debug: Print the Service Principal credentials (values will be masked)
      - name: Debug Service Principal credentials
        run: |
          echo "AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}"
          echo "AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}"
          echo "AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}"

      # Log in to Azure using Service Principal
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}","subscriptionId":"0e6dc202-bcae-4b8b-b1de-a8f3a04341d6"}'

      # Log in to Azure Container Registry
      - name: Log in to ACR
        run: |
          az acr login --name probuild

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build and push Docker image to ACR with dynamic tag
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: probuild.azurecr.io/probuildai-ui:${{ github.sha }}
          no-cache: true
        env:
          BACKEND_URL: "https://probuildai-backend.wonderfulgrass-0f331ae8.centralus.azurecontainerapps.io/api"
          API_KEY: "ef306472fbed4ca9835115255241412"

      # Debug: Verify the image exists in ACR
      - name: Debug ACR image
        run: |
          az acr repository show-tags --name probuild --repository probuildai-ui --output table

      # Deploy to Azure Container App with retry mechanism
      - name: Deploy to Azure Container App
        run: |
          for i in {1..3}; do
            echo "Attempt $i: Updating Azure Container App..."
            if az containerapp update \
              --name probuildai-ui \
              --resource-group rg-Probuild \
              --image probuild.azurecr.io/probuildai-ui:${{ github.sha }} \
              --set "properties.environmentId=/subscriptions/0e6dc202-bcae-4b8b-b1de-a8f3a04341d6/resourceGroups/rg-Probuild/providers/Microsoft.App/managedEnvironments/managedEnvironment-rgProbuild-ae27" \
              --set "properties.configuration.activeRevisionsMode=Single" \
              --set "properties.template.containers[0].image=probuild.azurecr.io/probuildai-ui:${{ github.sha }}" \
              --set "properties.template.containers[0].name=probuildai-ui" \
              --set "properties.template.containers[0].ports[0].containerPort=80" \
              --set "properties.configuration.ingress.targetPort=80" \
              --set "properties.configuration.ingress.external=true" \
              --set "properties.template.containers[0].env[0].name=BACKEND_URL" \
              --set "properties.template.containers[0].env[0].value=https://probuildai-backend.wonderfulgrass-0f331ae8.centralus.azurecontainerapps.io/api" \
              --set "properties.template.containers[0].env[1].name=API_KEY" \
              --set "properties.template.containers[0].env[1].value=ef306472fbed4ca9835115255241412" \
              --set "properties.template.containers[0].env[1].name=Google_API" \
              --set "properties.template.containers[0].env[1].value=AIzaSyBVEXpDDbV96oeuydmvV9F6Ew1Hq-6Psww" \
              --cpu 1.0 \
              --memory 2.0Gi \
              --min-replicas 1 \
              --max-replicas 1; then
              break
            else
              echo "Update failed, retrying in 30 seconds..."
              if [ $i -eq 3 ]; then
                echo "All retries failed. Exiting..."
                exit 1
              fi
              sleep 30
            fi
          done

      # Clean up old revisions
      - name: Clean up old revisions
        run: |
          az containerapp revision list --name probuildai-ui --resource-group rg-Probuild --query "[?active==false].name" -o tsv | while read revision; do
            echo "Deactivating old revision: $revision"
            az containerapp revision deactivate --name probuildai-ui --resource-group rg-Probuild --revision $revision
          done

      # Debug: Verify the container app revision
      - name: Debug Container App Revision
        run: |
          az containerapp revision list --name probuildai-ui --resource-group rg-Probuild --output table

      # Debug: Check container app logs
      - name: Check Container App Logs
        run: |
          az containerapp logs show \
            --name probuildai-ui \
            --resource-group rg-Probuild \
            --tail 50 \
            --format text || echo "Failed to fetch logs, ensure log analytics is enabled."
